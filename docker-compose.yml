networks:
  cda-networks:
    driver: bridge

services:
  # frontend-service:
  #    build: ./frontend
  #    container_name : frontend-service
  #    restart : always
  #    ports:
  #      - 4000:4000
  #    networks:
  #      - cda-networks
  #    depends_on:
  #      auth-service:
  #        condition: service_healthy
  #      chat-service:
  #        condition: service_healthy
  #      vote-service:
  #        condition: service_healthy
  #    volumes:
  #      - ./frontend:/app
  #      - /app/node_modules
  #    healthcheck: 
  #     test: ["CMD-SHELL", "curl -f http://localhost:4000/ | grep '<title>Vite + React + TS</title>' || exit 1"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3
          
  auth-service:
    build: ./services/auth-service
    container_name: auth-service
    ports: 
      - 3000:3000
    networks:
      - cda-networks
    restart: always
    healthcheck: 
      test: ["CMD", "curl", "-f", "http://localhost:3000/"]
      interval: 30s
      timeout: 10s
      retries: 3

  chat-service:
    build: ./services/chat-service
    container_name: chat-service
    ports: 
      - 3001:3001
    networks:
      - cda-networks
    depends_on:
       mysql:
         condition: service_healthy
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/"]
      interval: 30s
      timeout: 10s
      retries: 3

  vote-service:
    build: ./services/vote-service
    container_name: vote-service
    ports: 
      - 3003:3003
    networks:
      - cda-networks
    depends_on:
       mysql:
         condition: service_healthy
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3003/"]
      interval: 30s
      timeout: 10s
      retries: 3
  
  mysql:
    image: mysql:latest
    container_name: mysql-service
    restart: always
    environment:
       MYSQL_ALLOW_EMPTY_PASSWORD: yes
       MYSQL_DATABASE: dev_cda
    volumes:
      - mysql_data:/var/lib/mysql
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "3306:3306"
    networks:
      - cda-networks
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  mysql_data:
