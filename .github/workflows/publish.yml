name: CI - Docker Compose Tests

on: 
  push:
    branches:
      - main
      - dev

jobs:
  test-services:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Start all services
        uses: adambirds/docker-compose-action@v1.5.0
        with:
          compose-file: "docker-compose.yml"
          up-flags: "--build -d"

      - name: Wait for MySQL to be ready
        run: |
           echo "Waiting for MySQL to be ready..."
           until sudo docker exec mysql-service mysqladmin ping -h 127.0.0.1 -u root | grep "mysqld is alive"; do
           sleep 5
           done
           echo "MySQL is ready!"


      - name: Run tests for Auth service
        uses: adambirds/docker-compose-action@v1.5.0
        with:
          compose-file: "docker-compose.yml"
          test-container: "auth-service"
          test-command: "npm test"

      - name: Run tests for Chat service
        uses: adambirds/docker-compose-action@v1.5.0
        with:
          compose-file: "docker-compose.yml"
          test-container: "chat-service"
          test-command: "npm test"

      - name: Run tests for Vote service
        uses: adambirds/docker-compose-action@v1.5.0
        with:
          compose-file: "docker-compose.yml"
          test-container: "vote-service"
          test-command: "npm test"

      - name: Check running containers
        run: docker ps -a
        
      # - name: Wait for Backend to be ready
      #   run: |
      #     echo "Waiting for Backend to be ready..."
      #     until docker exec auth-service curl -f http://localhost:3000/ && \
      #     docker exec chat-service curl -f http://localhost:3001/ && \
      #     docker exec vote-service curl -f http://localhost:3003/; do
      #     echo "Still waiting for backend services..."
      #     sleep 5
      #     done
      #     echo "Backend is ready!"

      # - name: Run tests for Frontend service
      #   uses: adambirds/docker-compose-action@v1.5.0
      #   with:
      #     compose-file: "docker-compose.yml"
      #     test-container: "frontend-service"
      #     test-command: "npm test"

      - name: Stop services
        run: docker compose down
