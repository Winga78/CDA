name: CI - Docker Compose Tests

on: 
  push:
    branches:
      - main
      - dev

jobs:
  test-services:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Créer le fichier .env
        run: |
          echo "VITE_PROJECT_SERVICE_URL=${{ secrets.VITE_PROJECT_SERVICE_URL }}" >> .env
          echo "VITE_AUTH_SERVICE_URL=${{ secrets.VITE_AUTH_SERVICE_URL }}" >> .env
          echo "VITE_CHAT_SERVICE_URL=${{ secrets.VITE_CHAT_SERVICE_URL }}" >> .env
          echo "VITE_PROJECT_USER_POST_SERVICE_URL=${{ secrets.VITE_PROJECT_USER_POST_SERVICE_URL }}" >> .env
          echo "DB_TYPE=${{ secrets.DB_TYPE }}" >> .env
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
          echo "DB_DATABASE_CHAT=${{ secrets.DB_DATABASE_CHAT }}" >> .env
          echo "DB_DATABASE_PROJECT=${{ secrets.DB_DATABASE_PROJECT }}" >> .env
          echo "MYSQL_USER=${{ secrets.MYSQL_USER }}" >> .env
          echo "MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}" >> .env
          echo "DB_DATABASE_RELATION=${{ secrets.DB_DATABASE_RELATION }}" >> .env
          echo "MONGODB_URI=${{ secrets.MONGODB_URI }}" >> .env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
          echo "MYSQL_ADMIN_PASSWORD=${{ secrets.MYSQL_ADMIN_PASSWORD }}" >> .env
          echo "MYSQL_ADMIN_USER=${{ secrets.MYSQL_ADMIN_USER }}" >> .env
          echo "PORT=${{ secrets.PORT }}" >> .env
          echo "NODE_ENV=${{ secrets.NODE_ENV }}" >> .env
          echo "DOCKER_TARGET=${{ secrets.DOCKER_TARGET }}" >> .env

      - name: Start all services
        run: docker compose up -d

      - name: Wait for services to be ready
        run: |
          echo "Waiting for services to be ready..."
          until curl -s http://localhost:3001 > /dev/null; do echo "Waiting for chat-service..."; sleep 5; done
          until curl -s http://localhost:3002 > /dev/null; do echo "Waiting for project-service..."; sleep 5; done
          until curl -s http://localhost:3000 > /dev/null; do echo "Waiting for auth-service..."; sleep 5; done
          until curl -s http://localhost:3003 > /dev/null; do echo "Waiting for project-user-post-service..."; sleep 5; done
          until curl -s http://localhost:4000 > /dev/null; do echo "Waiting for frontend-service..."; sleep 5; done
          echo "All services are up!"

      - name: Wait for MySQL to be ready
        run: |
         until mysqladmin ping -h"${{ secrets.DB_HOST }}" -u"${{ secrets.MYSQL_USER }}" -p"${{ secrets.MYSQL_PASSWORD }}" --silent; do
         echo "Waiting for MySQL..."
         sleep 2
         done

      - name: Vérifier l’installation de vitest
        run: |
          cd frontend
          npm install

      - name: Run tests for Auth service
        uses: adambirds/docker-compose-action@v1.5.0
        with:
          compose-file: "docker-compose.prod.yml"
          test-container: "auth-service"
          test-command: "npm run test:e2e"

      - name: Run tests for Project service
        uses: adambirds/docker-compose-action@v1.5.0
        with:
            compose-file: "docker-compose.prod.yml"
            test-container: "project-service"
            test-command: "npm run test:e2e"

      - name: Run tests for Chat service
        uses: adambirds/docker-compose-action@v1.5.0
        with:
          compose-file: "docker-compose.prod.yml"
          test-container: "chat-service"
          test-command: "npm run test:e2e"

      - name: Run tests for project-user-post service
        uses: adambirds/docker-compose-action@v1.5.0
        with:
            compose-file: "docker-compose.prod.yml"
            test-container: "project-user-post-service"
            test-command: "npm run test:e2e"

      - name: Stop services
        run: docker compose down